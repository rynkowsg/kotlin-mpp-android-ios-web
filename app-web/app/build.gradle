buildscript {
    ext.kotlin_version = '1.3.21'
    repositories {
        mavenCentral()                                                          // kotlin-gradle-plugin
        maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }                // kotlin-frontend-plugin
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.45"
    }
}

// Workaround for issue related to FrontendPlugin
// TODO remove once https://github.com/Kotlin/kotlin-frontend-plugin/issues/141 is fixed
plugins.whenPluginAdded { plugin ->
    if (plugin.class.name == 'org.jetbrains.kotlin.gradle.frontend.FrontendPlugin') {
        def fixTask = tasks.register('webpack-config-fix') {
            it.doLast { file('webpack.config.d').mkdir() }
        }
        afterEvaluate {
            tasks.named('webpack-config').configure {
                it.dependsOn(fixTask)
            }
        }
    }
}

apply plugin: 'kotlin2js'
apply plugin: 'org.jetbrains.kotlin.frontend'

println("[build.gradle of \"${project.name}\"]")
println("rootDir:     ${rootDir}")
println("projectDir:  ${projectDir}")

repositories {
    jcenter()                                                                   // org.jetbrains.kotlin
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    compile 'org.jetbrains.kotlinx:kotlinx-html-js:0.6.11'
    compile project(':lib-common')
}

compileKotlin2Js {
    // COMMON ATTRIBUTES
    // Generate no warnings, default: false
    kotlinOptions.suppressWarnings = false
    // Enable verbose logging output, default: false
    kotlinOptions.verbose = true
    // JAVASCRIPT ATTRIBUTES
    // Whether a main function should be called.
    // Possible values: "call", "noCall"; default: "call"
    kotlinOptions.main = "call"
    // Generate .meta.js and .kjsm files with metadata.
    // It's required if you're building a reusable library that other
    // Kotlin modules can depend on, and should be distributed together
    // with the result of translation. Default: true
    kotlinOptions.metaInfo = true
    // Kind of a module generated by compiler
    // Possible values: "plain", "amd", "commonjs", "umd"
    // Default: "plain"
    kotlinOptions.moduleKind = "umd"
    // Generate source map. Default: false.
    kotlinOptions.sourceMap = true
    // Output file path
    kotlinOptions.outputFile = "$project.buildDir.path/js/${project.name}.js"
    // MORE ABOUT ATTRIBUTES:
    // https://kotlinlang.org/docs/reference/using-gradle.html
}

kotlinFrontend {
    downloadNodeJsVersion = "10.15.3"

    npm {
        dependency("kotlinx-html-js", "0.6.12")
    }

    webpackBundle {
        bundleName = "main"
        // enable/disable source maps
        sourceMapEnabled = true
        // a file that represents a directory to be served by dev server)
        contentPath = file('src/main/web')
        // web prefix
        publicPath = "/"
        // dev server host
        host = "localhost"
        // dev server port
        port = 8088
        // URL to be proxied, useful to proxy backend webserver
        proxyUrl = ""
        // log level of dev server
        // Possible vals: 'none', 'errors-only', 'minimal', 'normal', 'verbose'
        // https://webpack.js.org/configuration/dev-server/#devserverstats-
        stats = "normal"
    }
}
